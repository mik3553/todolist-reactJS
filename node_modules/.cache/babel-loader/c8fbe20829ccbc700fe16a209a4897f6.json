{"ast":null,"code":"var _jsxFileName = \"/home/mik/sites/react/todolist/src/components/filter.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({\n  showUnDone,\n  showDone,\n  showAll\n}) => {\n  return React.createElement(\"div\", {\n    className: \"filter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: showUnDone // style = {{ backgroundColor : showDone ? 'grey' : 'white' }}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"show done\"), React.createElement(\"button\", {\n    onClick: showAll,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"All\"), React.createElement(\"button\", {\n    onClick: showDone,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"show undone\"));\n};\n\nFilter.PropTypes = {};\nexport default Filter;","map":{"version":3,"sources":["/home/mik/sites/react/todolist/src/components/filter.js"],"names":["React","PropTypes","Filter","showUnDone","showDone","showAll"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAGA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,QAAd;AAAwBC,EAAAA;AAAxB,CAAD,KAAuC;AAC9C,SACD;AAAK,IAAA,SAAS,EAAG,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACS;AACI,IAAA,OAAO,EAAKF,UADhB,CAEI;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADT,EAOS;AACI,IAAA,OAAO,EAAKE,OADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPT,EAYS;AACI,IAAA,OAAO,EAAKD,QADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAZT,CADC;AAoBP,CArBD;;AAuBAF,MAAM,CAACD,SAAP,GAAmB,EAAnB;AAGA,eAAeC,MAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst Filter = ({ showUnDone, showDone, showAll }) => {\n        return (\n     \t\t<div className = 'filter'>\n                <button\n                    onClick = { showUnDone }\n                    // style = {{ backgroundColor : showDone ? 'grey' : 'white' }}\n                >\n                    show done\n                </button> \n                <button\n                    onClick = { showAll }\n                >\n                    All\n                </button>\n                <button\n                    onClick = { showDone }\n                >\n                    show undone\n                </button>\n            </div>\n        );\n};\n\nFilter.PropTypes = {\n\n};\nexport default Filter;"]},"metadata":{},"sourceType":"module"}