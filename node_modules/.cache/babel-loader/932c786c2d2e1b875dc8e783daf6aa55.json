{"ast":null,"code":"var _jsxFileName = \"/home/mik/sites/react/todolist/src/components/home.js\";\nimport React from 'react';\nimport Header from './header';\nimport Footer from './footer';\nimport List from './List';\nimport '../App.css';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      let inputName = event.target.name;\n      this.setState({\n        [inputName]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      let isDone = this.state.isDone;\n      let task = this.state.taskInput;\n      let tasks = [...this.state.tasks, {\n        name: task\n      }];\n      this.setState({\n        tasks,\n        taskInput: \"\"\n      });\n    };\n\n    this.button = id => {\n      let done = this.state.tasks[id].done;\n      this.setState({\n        done: true\n      });\n    };\n\n    this.state = {\n      taskInput: \"\",\n      tasks: [],\n      isDone: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.button = this.button.bind(this);\n  }\n\n  render() {\n    // const hide = null\n    // const {isDelete} = this.state;\n    // if(isDelete){\n    //  hide = \"hello\"\n    // }\n    const list = this.state.tasks.map((item, index) => {\n      if (item.done) {\n        return React.createElement(List, {\n          key: index,\n          task: item.name,\n          done: item.done,\n          button: () => this.button(item),\n          dataKey: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(List, {\n          key: index,\n          task: item.name,\n          done: item.done,\n          button: () => this.button(),\n          dataKey: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        });\n      }\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"ajouter une t\\xE2che : \"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.taskInput,\n      onChange: this.handleChange,\n      name: \"taskInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Ajouter\")), React.createElement(\"article\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, list))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/mik/sites/react/todolist/src/components/home.js"],"names":["React","Header","Footer","List","Home","Component","constructor","props","handleChange","event","inputName","target","name","setState","value","handleSubmit","preventDefault","isDone","state","task","taskInput","tasks","button","id","done","bind","render","list","map","item","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from './header';\nimport Footer from './footer';\nimport List from './List';\n\nimport '../App.css'\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        \ttaskInput : \"\",\n        \ttasks : [],\n        \tisDone : false\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.button = this.button.bind(this);\n    }\n\n    handleChange = (event) => {\n    \tlet inputName = event.target.name;\n    \tthis.setState({[inputName] : event.target.value })\n    }\n    handleSubmit = (event) => {\n    \tevent.preventDefault();\n        let isDone = this.state.isDone;\n    \tlet task = this.state.taskInput;\n    \tlet tasks = [ ...this.state.tasks, { name : task} ];\n\n    \tthis.setState({tasks, taskInput : \"\"})\n    }\n    button = (id) => {\n        let done = this.state.tasks[id].done;\n        this.setState({done : true});\n\n    }\n\n\n    render() {\n\n    \t// const hide = null\n    \t// const {isDelete} = this.state;\n    \t// if(isDelete){\n    \t//  hide = \"hello\"\n    \t// }\n    \t\n    \tconst list = this.state.tasks\n\t    \t.map((item, index) => {\n                if (item.done) {\n    \t    \t\treturn \t<List\n    \t\t\t    \t\t\tkey = {index}\n    \t\t\t    \t\t\ttask = {item.name}\n    \t\t\t    \t\t\tdone = {item.done}\n    \t\t\t    \t\t\tbutton = { () => this.button(item) }\n    \t\t\t    \t\t\tdataKey = {index}\n    \t    \t\t\t\t/>\n                }\n                else {\n                    return     <List\n                                key = {index}\n                                task = {item.name}\n                                done = {item.done}\n                                button = { () => this.button() }\n                                dataKey = {index}\n                            />\n                }\n\t    \t})\n    \t\n        return (\n        \t<div>\n\t            <Header />\n\t            <section>\n\t            \t<form onSubmit = {this.handleSubmit}>\n\t            \t\t<label>ajouter une t√¢che : </label>\n\t            \t\t<input\n\t            \t\t\ttype = 'text'\n\t            \t\t\tvalue = {this.state.taskInput} \n\t            \t\t\tonChange = {this.handleChange}\n\t            \t\t\tname = 'taskInput'\n\t            \t\t />\n\t            \t\t <button type = 'submit'>Ajouter</button>\n\t            \t</form>\n\t            \t<article>\n\t            \t\n\t            \t\t<ul>\n\t            \t\t\t{list}\n\t            \t\t</ul>\n\t            \t</article>\n\t            </section>\n\t            <Footer />\n            </div>\n        );\n    }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}