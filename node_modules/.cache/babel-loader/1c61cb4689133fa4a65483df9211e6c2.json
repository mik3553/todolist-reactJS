{"ast":null,"code":"var _jsxFileName = \"/home/mik/sites/react/todolist/src/components/home.js\";\nimport React, { Fragment } from 'react';\nimport Header from './header';\nimport Footer from './footer';\nimport Form from './form';\nimport List from './list';\nimport Filter from './filter';\nimport '../App.css';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      let taskInput = event.target.name;\n      this.setState({\n        [taskInput]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      let taskInput = [...this.state.taskInput];\n\n      if (taskInput.length > 0) {\n        let tasks = [...this.state.tasks, {\n          id: `tache numÃ©ro:${Date.now()}`,\n          name: taskInput,\n          isDone: false\n        }];\n        this.setState({\n          tasks,\n          taskInput: \"\",\n          error: false\n        }); // localStorage.setItem('tasks' , JSON.stringify(tasks));\n      } else {\n        this.setState({\n          error: true\n        });\n      }\n    };\n\n    this.isDone = id => {\n      let tasks = [...this.state.tasks];\n      tasks[id].isDone = !tasks[id].isDone;\n      this.setState({\n        tasks\n      }); // localStorage.setItem('tasks' , JSON.stringify(tasks));\n    };\n\n    this.removeTask = id => {\n      let tasks = [...this.state.tasks];\n      delete tasks[id];\n      this.setState({\n        tasks\n      }); // localStorage.setItem('tasks' , JSON.stringify(tasks));\n    };\n\n    this.showUnDone = () => {\n      this.setState({\n        tasks: this.state.tasks.filter(item => item.isDone === true)\n      });\n    };\n\n    this.showDone = () => {\n      const tasks = this.state.tasks.filter(item => item.isDone === false);\n      this.setState({\n        tasks\n      });\n    };\n\n    this.showAll = () => {\n      this.componentDidMount();\n    };\n\n    this.state = {\n      taskInput: \"\",\n      tasks: [],\n      error: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.isDone = this.isDone.bind(this);\n    this.showUnDone = this.showUnDone.bind(this);\n    this.showDone = this.showDone.bind(this);\n    this.removeTask = this.removeTask.bind(this);\n    this.showAll = this.showAll.bind(this);\n  }\n\n  render() {\n    const list = this.state.tasks.map((item, index) => {\n      return React.createElement(List, {\n        key: item.id,\n        task: item.name,\n        isDone: item.isDone,\n        button: () => this.isDone(index),\n        removeTask: () => this.removeTask(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      });\n    });\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Form, {\n      taskInput: this.state.taskInput,\n      submit: this.handleSubmit,\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), this.state.error ? React.createElement(\"p\", {\n      className: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Veuillez ins\\xE9rer une t\\xE2che\") : null, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, list), React.createElement(Filter, {\n      showDone: this.showDone,\n      showAll: this.showAll,\n      showUnDone: this.showUnDone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/mik/sites/react/todolist/src/components/home.js"],"names":["React","Fragment","Header","Footer","Form","List","Filter","Home","Component","constructor","props","handleChange","event","taskInput","target","name","setState","value","handleSubmit","preventDefault","state","length","tasks","id","Date","now","isDone","error","removeTask","showUnDone","filter","item","showDone","showAll","componentDidMount","bind","render","list","map","index"],"mappings":"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","sourcesContent":["import React , { Fragment } from 'react';\nimport Header from './header';\nimport Footer from './footer';\nimport Form   from './form';\nimport List   from './list';\nimport Filter from './filter';\nimport '../App.css';\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        \ttaskInput : \"\",\n        \ttasks     : [],\n            error     : null\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.isDone       = this.isDone.bind(this);\n        this.showUnDone   = this.showUnDone.bind(this);\n        this.showDone     = this.showDone.bind(this);\n        this.removeTask   = this.removeTask.bind(this);\n        this.showAll      = this.showAll.bind(this);\n    };\n    // componentDidUpdate () {\n    //     let tasks = [ ...this.state.tasks ];\n    //     localStorage.setItem('tasks' , JSON.stringify(tasks));\n    // }\n\n    // componentDidMount () {\n    //     let tasks = [ ...this.state.tasks ];\n    //     tasks = JSON.parse(localStorage.getItem('tasks'));\n    //     this.setState({ tasks })\n    // }\n    handleChange = (event) => {\n        let taskInput = event.target.name;\n    \tthis.setState({ [taskInput] : event.target.value })\n    }\n    handleSubmit = (event) => {\n    \tevent.preventDefault();\n    \tlet taskInput = [ ...this.state.taskInput ];\n        if (taskInput.length > 0) {\n        \tlet tasks = [ ...this.state.tasks,\n                            { \n                                id       : `tache numÃ©ro:${Date.now()}`,\n                                name     : taskInput,\n                                isDone   : false\n                            }\n                        ];\n        this.setState({ tasks, taskInput : \"\", error : false });\n        // localStorage.setItem('tasks' , JSON.stringify(tasks));\n\n        } else {\n            this.setState({error : true});\n        }\n    }\n    isDone = (id) => {\n        let tasks = [ ...this.state.tasks ];\n        tasks[id].isDone = !tasks[id].isDone;\n        this.setState({ tasks });\n        \n        // localStorage.setItem('tasks' , JSON.stringify(tasks));\n    }\n    removeTask = (id) => {\n        let tasks = [ ...this.state.tasks ];\n        delete tasks[id];\n        this.setState({tasks});\n\n        // localStorage.setItem('tasks' , JSON.stringify(tasks));\n    }\n    showUnDone = () => {\n        this.setState({ tasks : this.state.tasks.filter( item => item.isDone === true)  }); \n\n    }\n    showDone = () => {\n        const tasks = this.state.tasks.filter( item => item.isDone === false);\n        this.setState({tasks});\n    }\n    \n    showAll = () => {\n         this.componentDidMount();\n    }\n\n    render() {\n\n       \n    \tconst list = this.state.tasks\n\t    \t.map((item, index) => {\n               \n        \t    \treturn \t<List\n                \t\t\t    key = {item.id}\n                \t\t\t    task = {item.name}\n                \t\t\t    isDone = {item.isDone}\n                \t\t\t    button = { () => this.isDone(index) }\n                                removeTask = { () => this.removeTask(index) }\n            \t    \t    />   \n                \n\t    \t})\n    \t\n        return (\n        \t<Fragment>\n\t            <Header />\n\t            <section>\n                    <Form\n                        taskInput = { this.state.taskInput }\n                        submit = {this.handleSubmit}\n                        handleChange = {this.handleChange}\n                    />\n                    { this.state.error ? <p className = 'alert'>Veuillez insÃ©rer une tÃ¢che</p> :  null}\n                    <ul>\n\t                    {list}\n                    </ul>\n                    <Filter\n                        showDone   = {this.showDone}\n                        showAll    = {this.showAll}\n                        showUnDone = {this.showUnDone}\n                    />\n\t            </section>\n\t            <Footer />\n            </Fragment>\n        );\n    }\n}\n\nexport default Home;\n\n"]},"metadata":{},"sourceType":"module"}