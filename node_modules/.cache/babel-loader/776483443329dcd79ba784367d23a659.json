{"ast":null,"code":"var _jsxFileName = \"/home/mik/sites/react/todolist/src/components/home.js\";\nimport React, { Fragment } from 'react';\nimport Header from './header';\nimport Footer from './footer';\nimport Form from './form';\nimport List from './list';\nimport Filter from './filter';\nimport '../App.css';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidUpdate = () => {\n      let tasks = [...this.state.tasks];\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    this.handleChange = event => {\n      let taskInput = event.target.name;\n      this.setState({\n        [taskInput]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      let taskInput = [...this.state.taskInput];\n\n      if (taskInput.length > 0) {\n        let tasks = [...this.state.tasks, {\n          id: `tache numÃ©ro:${Date.now()}`,\n          content: taskInput,\n          isDone: false,\n          isRemove: false\n        }];\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n        this.setState({\n          tasks,\n          taskInput: \"\",\n          error: false\n        });\n      } else {\n        this.setState({\n          error: true\n        });\n      }\n    };\n\n    this.isDone = id => {\n      let tasks = [...this.state.tasks];\n      tasks.map(item => {\n        if (id === item.id) {\n          item.isDone = !item.isDone;\n        }\n      }); // localStorage.setItem('tasks' , JSON.stringify(tasks));\n\n      this.setState({\n        tasks\n      }); // tasks[id].isDone = !tasks[id].isDone;\n      // localStorage.setItem('tasks' , JSON.stringify(tasks));\n    };\n\n    this.removeTask = id => {\n      let tasks = [...this.state.tasks];\n      tasks.map(item => {\n        if (id === item.id) {\n          item.isRemove = true;\n        }\n      });\n      this.setState({\n        tasks\n      }); // localStorage.setItem('tasks' , JSON.stringify(tasks));\n    };\n\n    this.showUnDone = () => {// this.componentDidMount();\n      // const tasks = [...this.state.tasks.filter(item => item.isDone === false).className = 'none'];\n      // tasks.className = 'none';\n      // let li = document.querySelectorAll(\".list li[data-done=false]\");\n      // li.className = 'none';\n      // this.setState({ tasks });\n    };\n\n    this.showDone = e => {\n      // this.componentDidMount();\n      // e.preventDefault()\n      // this.state.tasks.filter( item => item.isDone === false )\n      this.setState({\n        tasks: this.state.tasks.filter(item => item.isDone === false)\n      }); // if ( item.isDone === false ) {\n      //     item.isDone = true;\n      // }\n      // if(item.isDone === false){\n      //    item.style.backg = 'blue';\n      // }\n      // this.setState({tasks})\n    };\n\n    this.showAll = () => {\n      this.componentDidMount();\n    };\n\n    this.state = {\n      taskInput: \"\",\n      tasks: [],\n      error: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.isDone = this.isDone.bind(this);\n    this.showUnDone = this.showUnDone.bind(this);\n    this.showDone = this.showDone.bind(this);\n    this.removeTask = this.removeTask.bind(this);\n    this.showAll = this.showAll.bind(this);\n  }\n\n  componentDidMount() {\n    let tasks = [...this.state.tasks];\n    tasks = JSON.parse(localStorage.getItem('tasks'));\n    this.setState({\n      tasks\n    });\n  }\n\n  render() {\n    const list = this.state.tasks.map((item, index) => {\n      if (!item.isRemove) {\n        return React.createElement(List, {\n          key: item.id,\n          content: item.content,\n          isDone: item.isDone,\n          button: () => this.isDone(item.id),\n          removeTask: () => this.removeTask(item.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        });\n      }\n    });\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Form, {\n      taskInput: this.state.taskInput,\n      submit: this.handleSubmit,\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), this.state.error ? React.createElement(\"p\", {\n      className: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Veuillez ins\\xE9rer une t\\xE2che\") : null, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, list), React.createElement(Filter, {\n      showDone: this.showDone,\n      showAll: this.showAll,\n      showUnDone: this.showUnDone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/mik/sites/react/todolist/src/components/home.js"],"names":["React","Fragment","Header","Footer","Form","List","Filter","Home","Component","constructor","props","componentDidUpdate","tasks","state","localStorage","setItem","JSON","stringify","handleChange","event","taskInput","target","name","setState","value","handleSubmit","preventDefault","length","id","Date","now","content","isDone","isRemove","error","map","item","removeTask","showUnDone","showDone","e","filter","showAll","componentDidMount","bind","parse","getItem","render","list","index"],"mappings":"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","sourcesContent":["import React , { Fragment } from 'react';\nimport Header from './header';\nimport Footer from './footer';\nimport Form   from './form';\nimport List   from './list';\nimport Filter from './filter';\nimport '../App.css';\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        \ttaskInput  : \"\",\n        \ttasks      : [],\n            error      : null\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.isDone       = this.isDone.bind(this);\n        this.showUnDone   = this.showUnDone.bind(this);\n        this.showDone     = this.showDone.bind(this);\n        this.removeTask   = this.removeTask.bind(this);\n        this.showAll      = this.showAll.bind(this);\n    };\n   \n    componentDidMount () {\n        let tasks = [ ...this.state.tasks ];\n        tasks = JSON.parse(localStorage.getItem('tasks'));\n        this.setState({ tasks });\n    }\n\n        componentDidUpdate = () => {\n             let tasks = [ ...this.state.tasks ];\n             localStorage.setItem('tasks' , JSON.stringify(tasks)); \n        }\n    \n    \n    handleChange = (event) => {\n        let taskInput = event.target.name;\n    \tthis.setState({ [taskInput] : event.target.value });\n    }\n    handleSubmit = (event) => {\n    \tevent.preventDefault();\n    \tlet taskInput = [ ...this.state.taskInput ];\n        if (taskInput.length > 0) {\n        \tlet tasks = [ ...this.state.tasks,\n                            { \n                                id       : `tache numÃ©ro:${Date.now()}`,\n                                content  : taskInput,\n                                isDone   : false,\n                                isRemove : false\n                            }\n                        ];\n        localStorage.setItem('tasks' , JSON.stringify(tasks));\n        this.setState({ tasks, taskInput : \"\", error : false });\n\n        } else {\n            this.setState({error : true});\n        }\n    }\n    isDone = (id) => {\n        let tasks = [ ...this.state.tasks ];\n        tasks.map( item => {\n            if (id === item.id) {\n                item.isDone = !item.isDone;\n            }\n        })\n        // localStorage.setItem('tasks' , JSON.stringify(tasks));\n        this.setState({ tasks });\n        // tasks[id].isDone = !tasks[id].isDone;\n        // localStorage.setItem('tasks' , JSON.stringify(tasks));\n    }\n    removeTask = (id) => {\n        let tasks = [ ...this.state.tasks ];\n        tasks.map( item => {\n            if (id === item.id) {\n               item.isRemove = true;\n            }\n        })\n        this.setState({tasks});\n        // localStorage.setItem('tasks' , JSON.stringify(tasks));\n    }\n    showUnDone = () => {\n        // this.componentDidMount();\n        // const tasks = [...this.state.tasks.filter(item => item.isDone === false).className = 'none'];\n        // tasks.className = 'none';\n        // let li = document.querySelectorAll(\".list li[data-done=false]\");\n        // li.className = 'none';\n\n        // this.setState({ tasks });\n    }\n    showDone = (e) => {\n        // this.componentDidMount();\n        // e.preventDefault()\n        // this.state.tasks.filter( item => item.isDone === false )\n        this.setState({ tasks : this.state.tasks.filter( item => item.isDone === false) })\n        // if ( item.isDone === false ) {\n        //     item.isDone = true;\n        // }\n                                                // if(item.isDone === false){\n                                                //    item.style.backg = 'blue';\n                                                // }\n                                           \n        // this.setState({tasks})\n    }\n    showAll = () => {\n        this.componentDidMount();\n    }\n\n    render() {\n    \tconst list = this.state.tasks\n\t    \t.map((item, index) => {\n                if (!item.isRemove) {\n        \t    \treturn \t<List\n                \t\t\t    key        = {item.id}\n                                content    = {item.content}\n                \t\t\t    isDone     = {item.isDone}\n                \t\t\t    button     = { () => this.isDone(item.id) }\n                                removeTask = { () => this.removeTask(item.id) }\n            \t    \t    />   \n                }\n\t    \t})\n    \t\n        return (\n        \t<Fragment>\n\t            <Header />\n\t            <section>\n                    <Form\n                        taskInput    = { this.state.taskInput }\n                        submit       = { this.handleSubmit }\n                        handleChange = { this.handleChange }\n                    />\n                    { this.state.error ? <p className = 'alert'>Veuillez insÃ©rer une tÃ¢che</p> :  null}\n                    <ul>\n\t                    {list}\n                    </ul>\n                    <Filter\n                        showDone   = {this.showDone}\n                        showAll    = {this.showAll}\n                        showUnDone = {this.showUnDone}\n                    />\n\t            </section>\n\t            <Footer />\n            </Fragment>\n        );\n    }\n}\n\nexport default Home;\n\n"]},"metadata":{},"sourceType":"module"}