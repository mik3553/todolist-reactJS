{"ast":null,"code":"var _jsxFileName = \"/home/mik/sites/react/todolist/src/components/home.js\";\nimport React, { Fragment } from 'react';\nimport Header from './header';\nimport Footer from './footer';\nimport Form from './form';\nimport List from './list';\nimport Filter from './filter';\nimport '../App.css';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        taskInput: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      let task = this.state.taskInput;\n\n      if (task.length > 1) {\n        let tasks = [...this.state.tasks, {\n          id: Date.now(),\n          name: task,\n          isDone: false,\n          isRemove: false\n        }];\n        this.setState({\n          tasks,\n          taskInput: \"\",\n          error: false\n        });\n      } else {\n        this.setState({\n          error: true\n        });\n      }\n    };\n\n    this.isDone = id => {\n      let tasks = [...this.state.tasks];\n      this.state.tasks[id].isDone = !this.state.tasks[id].isDone;\n      this.setState({\n        tasks\n      });\n    };\n\n    this.removeTask = id => {\n      let tasks = [...this.state.tasks];\n      this.state.tasks[id].isRemove = true;\n      this.setState({\n        tasks\n      });\n    };\n\n    this.state = {\n      taskInput: \"\",\n      error: null,\n      tasks: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.isDone = this.isDone.bind(this);\n  }\n\n  render() {\n    if (this.state.error === true) {\n      return React.createElement(Filter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      });\n    }\n\n    const list = this.state.tasks.map((item, index) => {\n      if (!item.isRemove) {\n        return React.createElement(List, {\n          key: item.id,\n          task: item.name,\n          isDone: item.isDone,\n          button: () => this.isDone(index),\n          removeTask: () => this.removeTask(item.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        });\n      }\n    });\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Form, {\n      taskInput: this.state.taskInput,\n      submit: this.handleSubmit,\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), this.state.error, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, list), React.createElement(Filter, {\n      hideUnDone: this.hideUnDone,\n      hideDone: this.hideDone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Home;\n{\n  /* <form onSubmit = {this.handleSubmit}>\n                                             <label>ajouter une t√¢che : </label>\n                                             <input\n                                                 type = 'text'\n                                                 value = {this.state.taskInput} \n                                                 onChange = {this.handleChange}\n                                                 name = 'taskInput'\n                                              />\n                                              <button type = 'submit'>Ajouter</button>\n                                         </form> */\n}","map":{"version":3,"sources":["/home/mik/sites/react/todolist/src/components/home.js"],"names":["React","Fragment","Header","Footer","Form","List","Filter","Home","Component","constructor","props","handleChange","event","setState","taskInput","target","value","handleSubmit","preventDefault","task","state","length","tasks","id","Date","now","name","isDone","isRemove","error","removeTask","bind","render","list","map","item","index","hideUnDone","hideDone"],"mappings":"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","sourcesContent":["import React , { Fragment } from 'react';\nimport Header from './header';\nimport Footer from './footer';\nimport Form from './form';\nimport List from './list';\nimport Filter from './filter';\n\nimport '../App.css'\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        \ttaskInput : \"\",\n            error : null,\n        \ttasks : [],\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.isDone       = this.isDone.bind(this);\n       \n        \n    }\n\n    handleChange = (event) => {\n    \t\n    \tthis.setState({taskInput : event.target.value })\n    }\n    handleSubmit = (event) => {\n    \tevent.preventDefault();\n    \tlet task = this.state.taskInput;\n        if (task.length > 1) {\n        \tlet tasks = [ ...this.state.tasks,\n                            { \n                                id : Date.now(),\n                                name    : task,\n                                isDone   : false,\n                                isRemove : false\n                            }\n                        ];\n        \tthis.setState({ tasks, taskInput : \"\", error : false });\n        } else {\n            this.setState({error : true});\n        }\n    }\n    isDone = (id) => {\n        let tasks = [ ...this.state.tasks ];\n        this.state.tasks[id].isDone = !this.state.tasks[id].isDone;\n        this.setState({ tasks });\n    }\n    removeTask = (id) => {\n        let tasks = [ ...this.state.tasks ];\n        this.state.tasks[id].isRemove = true;\n        this.setState({tasks});\n    }\n   \n\n\n    render() {\n    \t\n        if (this.state.error === true) {\n            return ( <Filter />)\n        }\n    \tconst list = this.state.tasks\n\t    \t.map((item, index) => {\n                if (!item.isRemove) {\n        \t    \treturn \t<List\n                \t\t\t    key = {item.id}\n                \t\t\t    task = {item.name}\n                \t\t\t    isDone = {item.isDone}\n                \t\t\t    button = { () => this.isDone(index) }\n                                removeTask = { () => this.removeTask(item.id) }\n            \t    \t    />   \n                }\n\t    \t})\n    \t\n        return (\n        \t<Fragment>\n\t            <Header />\n\t            <section>\n                    <Form\n                        taskInput = { this.state.taskInput }\n                        submit = {this.handleSubmit}\n                        handleChange = {this.handleChange}\n                    />\n                    {this.state.error}\n                    <ul>\n\t                    {list}\n                    </ul>\n                    <Filter\n                        hideUnDone = {this.hideUnDone}\n                        hideDone   = {this.hideDone}\n                    />\n\t            </section>\n\t            <Footer />\n            </Fragment>\n        );\n    }\n}\n\nexport default Home;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n{/* <form onSubmit = {this.handleSubmit}>\n                                            <label>ajouter une t√¢che : </label>\n                                            <input\n                                                type = 'text'\n                                                value = {this.state.taskInput} \n                                                onChange = {this.handleChange}\n                                                name = 'taskInput'\n                                             />\n                                             <button type = 'submit'>Ajouter</button>\n                                        </form> */}"]},"metadata":{},"sourceType":"module"}